[preprocessing]
; Directory with pdb files
pdb_path = data/pdb_1400
; CSV file with sequences
sequence_path = unit_test/fasta_list.csv
; Pickle output path
pickle_path = unit_test/test.pickle
; Template coordinates from original repo
template_coords = ./cg_X0.npz
; Type of model (ab or nb)
model_type = nb
; Whether to compute torsion angles
compute_torsion_angles = true
; FAPE weight. If empty then the weight tensor is none
differential_weight_fwr_cdr_FAPE = 3
; Do you want to weight cdr-cdr residue pairs or just fwr-cdr pairs? Empty is considered false and only fwr-cdr pairs are weighted. Only matters if a value for differential_weight_fwr_cdr_FAPE is provided
weight_cdr_cdr_pairs_FAPE = true
; Train-validation-test split ratio as a list. If the list is of length 2, then only train and val datasets are created
train_val_test_split_ratio = [0.6, 0.2, 0.2]

[training]
; Training configuration
training_config_path = unit_test/training.json
; Model configuration
model_config_path = unit_test/config.json
; Initial weights to use (can be left empty)
initial_weights = unit_test/weights.pt
; Output directory for checkpoints and logging
output_dir = unit_test/logs
; Run name
run_name = run_test
; Version id. The following directory structure will be used: {output_dir}/{run_name}/{version_id}
version_id = v1
; Training pickle from preprocessing step
train_data_path = unit_test/test_train.pickle
; Validation pickle from preprocessing step
validation_data_path = unit_test/test_validation.pickle
; Test pickle from preprocessing step; Could be left empty if no test dataset
test_data_path = unit_test/test_test.pickle
; GPU devices to run on. Could be empty (for automatic determination) or a list of integers
devices = 

[inference]
; Model configuration
config_path = unit_test/config.json
; Model checkpoint for inference
model_ckpt = unit_test/logs/run_test/v1/checkpoints/last.ckpt
; Model type (ab or nb)
model_type = nb
; CSV Sequence path for inference
sequence_path = unit_test/benchmark_seq.csv
; Number of CPUs for parallelization. Empty means os.cpu_count() will be used to determine the number of cpus
ncpu = 
; Output directory for PDBs
output_dir = unit_test/predicted
; Whether to run refinement of outputs
refine = true
; Number of seeds to run for each input
n_seeds = 5

[benchmarking]
; CSV Sequence path for benchmarking
sequence_path = unit_test/benchmark_seq.csv
; Directory with ground truth pdb files
ground_truth_pdb_path = benchmarking/int_nb_59
; Directory with predicted pdb files
predicted_pdb_path = unit_test/predicted
; Model prefix
prefix = unit_test
